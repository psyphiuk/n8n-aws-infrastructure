AWSTemplateFormatVersion: '2010-09-09'
Description: 'VPC, subnets, IGW, NAT, and route tables for n8n'

Parameters:
  VpcCidr:
    Type: String

  PublicSubnetCIDRs:
    Type: List<String>

  PrivateSubnetCIDRs:
    Type: List<String>

Resources:
  VPC:
    Type: AWS::EC2::VPC
    Properties:
      CidrBlock: !Ref VpcCidr
      EnableDnsSupport: true
      EnableDnsHostnames: true

  InternetGateway:
    Type: AWS::EC2::InternetGateway

  VPCGatewayAttachment:
    Type: AWS::EC2::VPCGatewayAttachment
    Properties:
      VpcId:             !Ref VPC
      InternetGatewayId: !Ref InternetGateway

  PublicRouteTable:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId: !Ref VPC

  PublicRoute:
    Type: AWS::EC2::Route
    DependsOn: VPCGatewayAttachment
    Properties:
      RouteTableId         : !Ref PublicRouteTable
      DestinationCidrBlock : '0.0.0.0/0'
      GatewayId            : !Ref InternetGateway

  PublicSubnet1:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId                  : !Ref VPC
      CidrBlock              : !Select [ 0, !Ref PublicSubnetCIDRs ]
      AvailabilityZone       : !Select [ 0, !GetAZs '' ]
      MapPublicIpOnLaunch    : true

  PublicSubnet2:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId                  : !Ref VPC
      CidrBlock              : !Select [ 1, !Ref PublicSubnetCIDRs ]
      AvailabilityZone       : !Select [ 1, !GetAZs '' ]
      MapPublicIpOnLaunch    : true

  PublicSubnet1RouteTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      SubnetId     : !Ref PublicSubnet1
      RouteTableId : !Ref PublicRouteTable

  PublicSubnet2RouteTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      SubnetId     : !Ref PublicSubnet2
      RouteTableId : !Ref PublicRouteTable

  NatEIP:
    Type: AWS::EC2::EIP
    Properties:
      Domain: vpc

  NatGateway:
    Type: AWS::EC2::NatGateway
    Properties:
      AllocationId: !GetAtt NatEIP.AllocationId
      SubnetId    : !Ref PublicSubnet1

  PrivateRouteTable:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId: !Ref VPC

  PrivateRoute:
    Type: AWS::EC2::Route
    Properties:
      RouteTableId        : !Ref PrivateRouteTable
      DestinationCidrBlock: '0.0.0.0/0'
      NatGatewayId        : !Ref NatGateway

  PrivateSubnet1:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId            : !Ref VPC
      CidrBlock        : !Select [ 0, !Ref PrivateSubnetCIDRs ]
      AvailabilityZone : !Select [ 0, !GetAZs '' ]

  PrivateSubnet2:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId            : !Ref VPC
      CidrBlock        : !Select [ 1, !Ref PrivateSubnetCIDRs ]
      AvailabilityZone : !Select [ 1, !GetAZs '' ]

  PrivateSubnet1RouteTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      SubnetId     : !Ref PrivateSubnet1
      RouteTableId : !Ref PrivateRouteTable

  PrivateSubnet2RouteTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      SubnetId     : !Ref PrivateSubnet2
      RouteTableId : !Ref PrivateRouteTable

Outputs:
  VpcId:
    Value: !Ref VPC

  PublicSubnetIds:
    Value: !Join [ ',', [ !Ref PublicSubnet1, !Ref PublicSubnet2 ] ]

  PrivateSubnetIds:
    Value: !Join [ ',', [ !Ref PrivateSubnet1, !Ref PrivateSubnet2 ] ]
